num
dim(num)
dim(num)
filtered_df <- filter(diamonds, carat == 1)
dim(num)
filtered_df <- filter(diamonds, carat == 0.99)
dim(num)
dim(diamonds)
filtered_df <- filter(diamonds, carat == 0.99)
dim(diamonds)
filtered_df <- filter(diamonds, carat == 0.99)
dim(num)
num
dim(diamonds)
filtered_df <- filter(diamonds, carat == 0.99)
dim(num)
# 10 diamonds are 0.99 carat
num <- diamonds %>% filter(carat == 1)
dim(num)
num
dim(num)
View(num)
View(num)
filtered_df <- filter(diamonds, carat == 0.99)
dim(num)
View(filtered_df)
View(filtered_df)
View(num)
View(num)
dim(diamonds)
filtered_df <- filter(diamonds, carat == 0.99)
dim(num)
View(num)
View(num)
filtered_df <- diamonds %>% filter(carat == 0.99)
dim(num)
View(num)
View(num)
# 1558 diamonds are 0.99 carat
num <- diamonds %>% filter(carat == 1)
dim(num)
num <- filter(diamonds, abs(carat - 0.99) < tolerance)
dim(diamonds)
tolerance <- 0.0001
num <- filter(diamonds, abs(carat - 0.99) < tolerance)
dim(num)
# 1558 diamonds are 0.99 carat
num <- diamonds %>% filter(carat == 1)
dim(num)
?coord_cartesian
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y),binwidth = 0.5) +
coord_cartesian(ylim = c(0,50))
?coord_cartesian
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y),binwidth = 0.5) +
coord_cartesian(ylim = c(0,50),xlim = c(0,1000))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y),binwidth = 0.5) +
coord_cartesian(ylim = c(0,50),xlim = c(0,1000))
source("C:/code/CSCI4600S24_Ziyue_Zhao/Lab1_part2/Exploratory_Data_Analysis.R", echo=TRUE)
y <- 10
diamonds2 <- diamonds %>% filter(between(y, 3, 20))
diamonds2 <- diamonds %>% mutate(y = ifelse(y < 3 | y > 20, NA, y))
diamonds2 <- diamonds %>% filter(between(y, 3, 20))
diamonds2 <- diamonds %>% mutate(y = ifelse(y < 3 | y > 20, NA, y))
ggplot(data = diamonds2, mapping = aes(x = x, y = y)) + geom_point()
ggplot(data = diamonds2, mapping = aes(x = x, y = y)) + geom_point(na.rm = TRUE)
nycflights13::flights %>% mutate( cancelled =
is.na(dep_time), sched_hour =
sched_dep_time %/% 100, sched_min =
sched_dep_time %% 100, sched_dep_time =
sched_hour + sched_min / 60 ) %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly( mapping = aes(color =
cancelled), binwidth = 1/4 )
nycflights13 <-flights %>% mutate( cancelled =
is.na(dep_time), sched_hour =
sched_dep_time %/% 100, sched_min =
sched_dep_time %% 100, sched_dep_time =
sched_hour + sched_min / 60 ) %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly( mapping = aes(color =
cancelled), binwidth = 1/4 )
diamonds2 <- diamonds %>% filter(between(y, 3, 20))
diamonds2 <- diamonds %>% mutate(y = ifelse(y < 3 | y > 20, NA, y))
ggplot(data = diamonds2, mapping = aes(x = x, y = y)) + geom_point()
ggplot(data = diamonds2, mapping = aes(x = x, y = y)) + geom_point(na.rm = TRUE)
ï¼Ÿmode
?mode
ggplot(flights, aes(x = dep_delay, y = arr_delay, color = distance)) +
labs(title = "Scatter Plot of Departure vs Arrival Delays",
x = "Departure Delay (minutes)",
y = "Arrival Delay (minutes)",
color = "Distance (miles)")
library(ggplot2)
library(nycflights13)
ggplot(flights, aes(x = dep_delay, y = arr_delay, color = distance)) +
labs(title = "Scatter Plot of Departure vs Arrival Delays",
x = "Departure Delay (minutes)",
y = "Arrival Delay (minutes)",
color = "Distance (miles)")
ggplot(flights, aes(x = dep_delay, y = arr_delay, color = distance)) +
scale_color_gradient(low = "lightblue", high = "darkblue") +
labs(title = "Scatter Plot of Departure vs Arrival Delays",
x = "Departure Delay (minutes)",
y = "Arrival Delay (minutes)",
color = "Distance (miles)")
## Exercise 3: EDA on NYCFlights13 dataset
summary(flights)
average_delay <- flights  %>%
group_by(carrier) %>%
summarise(AverageDelay = mean(dep_delay, na.rm = TRUE), .groups = 'drop')
ggplot(average_delay, aes(x = reorder(carrier, AverageDelay), y = AverageDelay)) +
geom_bar(stat = "identity") +
labs(title = "Average Departure Delay by Airline",
x = "Airline",
y = "Average Delay (minutes)")
average_delay <- flights  %>%
group_by(carrier) %>%
summarise(AverageDelay = mean(dep_delay, na.rm = TRUE), .groups = 'drop')
ggplot(average_delay, aes(x = reorder(carrier, AverageDelay), y = AverageDelay)) +
geom_bar(stat = "identity") +
labs(title = "Average Departure Delay by Airline",
x = "Airline",
y = "Average Delay (minutes)")
ggplot(flights, aes(x = dep_delay, y = arr_delay, color = distance)) +
scale_color_gradient(low = "lightblue", high = "darkblue") +
labs(title = "Scatter Plot of Departure vs Arrival Delays",
x = "Departure Delay (minutes)",
y = "Arrival Delay (minutes)",
color = "Distance (miles)")
ggplot(flights, aes(x = dep_delay, y = arr_delay, color = distance)) +
scale_color_gradient(low = "lightblue", high = "darkblue") +
labs(title = "Scatter Plot of Departure vs Arrival Delays",
x = "Departure Delay (minutes)",
y = "Arrival Delay (minutes)",
color = "Distance (miles)")
ggplot(flights, aes(x = dep_delay, y = arr_delay, color = distance)) +
geom_point(alpha = 0.1) +
labs(title = "Scatter Plot of Departure vs Arrival Delays",
x = "Departure Delay (minutes)",
y = "Arrival Delay (minutes)",
color = "Distance (miles)")
## Exercise 3: EDA on NYCFlights13 dataset
summary(flights)
library(nycflights13)
library(dplyr)
## Exercise 3: EDA on NYCFlights13 dataset
summary(flights)
average_delay <- flights  %>%
group_by(carrier) %>%
summarise(AverageDelay = mean(dep_delay, na.rm = TRUE), .groups = 'drop')
ggplot(average_delay, aes(x = reorder(carrier, AverageDelay), y = AverageDelay)) +
geom_bar(stat = "identity") +
labs(title = "Average Departure Delay by Airline",
x = "Airline",
y = "Average Delay (minutes)")
library(ggplot2)
ggplot(average_delay, aes(x = reorder(carrier, AverageDelay), y = AverageDelay)) +
geom_bar(stat = "identity") +
labs(title = "Average Departure Delay by Airline",
x = "Airline",
y = "Average Delay (minutes)")
ggplot(average_delay, aes(x = (carrier, AverageDelay), y = AverageDelay)) +
ggplot(average_delay, aes(x = AverageDelay, y = AverageDelay)) +
geom_bar(stat = "identity") +
labs(title = "Average Departure Delay by Airline",
x = "Airline",
y = "Average Delay (minutes)")
(carrier
## Exercise 1: Building Regression Models
# Load dataset for regression analysis.
data <- read.csv("c:/code/CSCI4600_hw/DA_Files/dataset_multipleRegression.csv")
# Create and predict with a linear model considering unemployment rate and high school graduates.
model1 <- lm(ROLL ~ UNEM + HGRAD, data = data)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
generate_data <- function(data){
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
mean_value<-mean(data, na.rm = TRUE)
median_value<-median(data, na.rm = TRUE)
mode_value<-getmode(data)
print(paste(summary(data)))
print(paste("Mean of WATER_E variable:", mean_value))
print(paste("Median of WATER_E variable:", median_value))
print(paste("Mode of WATER_E variable:", mode_value))
}
# read in data
EPI_data <- read.csv("c:/code/CSCI4600S24_Ziyue_Zhao/Lab1/2010EPI_data.csv")
EPI_data_name <- EPI_data[1,]
EPI_data = EPI_data[-1,]
colnames(EPI_data) <- c(EPI_data_name)
summary(EPI_data$AIR_E)
## Lab2 Part1a
# change the value to numeric and remove NaN
data1 <- as.numeric(EPI_data$AIR_E)
tf <- is.na(data1)
data1 <- data1[!tf]
summary(data1)
mean_value<-mean(data1, na.rm = TRUE)
median_value<-median(data1, na.rm = TRUE)
mode_value<-getmode(data1)
print(paste("Mean of AIR_E variable:", mean_value))
print(paste("Median of AIR_E variable:", median_value))
print(paste("Mode of AIR_E variable:", mode_value))
# change the value to numeric and remove NaN
data2 <- as.numeric(EPI_data$WATER_E)
tf <- is.na(data2)
data2 <- data2[!tf]
summary(data2)
mean_value<-mean(data2, na.rm = TRUE)
median_value<-median(data2, na.rm = TRUE)
mode_value<-getmode(data2)
print(paste("Mean of WATER_E variable:", mean_value))
print(paste("Median of WATER_E variable:", median_value))
print(paste("Mode of WATER_E variable:", mode_value))
# draw Box plots for AIR_E variable
boxplot(data1)
# draw Box plots for WATER_E variable
boxplot(data2)
# draw two box plot on the same graph
combined_data <- list(Group1 = data1, Group2 = data2)
boxplot(combined_data,
main = "Boxplot for Two Groups",
xlab = "Group",
ylab = "Values",
col = c("red", "blue"),
names = c("Group 1", "Group 2"))
#  Generate Central Tendency values for NOX_pt & SO2_pt variable
generate_data(EPI_data$NOX_pt)
generate_data(EPI_data$SO2_pt)
# Generate the Boxplots for OZONE_pt variable
data_OZONE_pt <- as.numeric(EPI_data$OZONE_pt)
tf <- is.na(data_OZONE_pt)
data_OZONE_pt <- data_OZONE_pt[!tf]
summary(data_OZONE_pt)
boxplot(data_OZONE_pt)
# Generate the Boxplots for WQI_pt variable
data_WQI_pt <- as.numeric(EPI_data$WQI_pt)
tf <- is.na(data_WQI_pt)
data_WQI_pt <- data_WQI_pt[!tf]
summary(data_WQI_pt)
boxplot(data_WQI_pt)
# draw box plot for both of them
boxplot(data_OZONE_pt,data_WQI_pt)
# Generate Central Tendency values for CLIMATE & AGRICULTUREvariable
generate_data(EPI_data$CLIMATE)
generate_data(EPI_data$AGRICULTURE)
# Generate the Boxplots for FISHERIES variable
str(EPI_data$FISHERIES)
data_FISHERIES <- as.numeric(EPI_data$FISHERIES)
tf <- is.na(data_FISHERIES)
data_FISHERIES <- data_FISHERIES[!tf]
summary(data_FISHERIES)
boxplot(data_FISHERIES)
# Generate the Boxplots for NMVOC_pt variable
data_NMVOC_pt <- as.numeric(EPI_data$NMVOC_pt)
tf <- is.na(data_NMVOC_pt)
data_NMVOC_pt <- data_NMVOC_pt[!tf]
summary(data_NMVOC_pt)
boxplot(data_NMVOC_pt)
# draw box plot for both of them
boxplot(data_FISHERIES,data_NMVOC_pt)
# data boxplot(ENVHEALTH,ECOSYSTEM)
data_ENVHEALTH <- as.numeric(EPI_data$ENVHEALTH)
tf <- is.na(data_ENVHEALTH)
data_ENVHEALTH <- data_ENVHEALTH[!tf]
summary(data_ENVHEALTH)
boxplot(data_ENVHEALTH)
data_ECOSYSTEM <- as.numeric(EPI_data$ECOSYSTEM)
tf <- is.na(data_ECOSYSTEM)
data_ECOSYSTEM <- data_ECOSYSTEM[!tf]
summary(data_ECOSYSTEM)
boxplot(data_ECOSYSTEM)
boxplot(data_ENVHEALTH,data_ECOSYSTEM)
qqplot(data_ENVHEALTH,data_ECOSYSTEM)
##Lab2 Part1b:Regression
EPI_data1 <- read.csv("c:/code/CSCI4600_hw/DA_Files/EPI/EPI_data.csv")
boxplot(ENVHEALTH,DALY,AIR_H,WATER_H)
lmENVH<-lm(ENVHEALTH ~ DALY + AIR_H + WATER_H)
cENVH<-coef(lmENVH)
length(EPI_data1$ENVHEALTH)
DALYNEW<-c(seq(5,95,(95-5)/(231-1)))
AIR_HNEW<-c(seq(5,95,(95-5)/(231-1)))
WATER_HNEW<-c(seq(5,95,(95-5)/(231-1)))
NEW<-data.frame(DALYNEW,AIR_HNEW,WATER_HNEW)
pENV<-predict(lmENVH, NEW, interval="prediction")
cENV<-predict(lmENVH, NEW, interval="confidence")
Model1 <- lm(AIR_E ~ DALY+AIR_H+WATER_H)
cENVH<-coef(Model1)
length(EPI_data1$AIR_E)
DALYNEW<-c(seq(5,95,(95-5)/(231-1)))
AIR_HNEW<-c(seq(5,95,(95-5)/(231-1)))
WATER_HNEW<-c(seq(5,95,(95-5)/(231-1)))
NEW<-data.frame(DALYNEW,AIR_HNEW,WATER_HNEW)
pENV<-predict(Model1, NEW, interval="prediction")
cENV<-predict(Model1, NEW, interval="confidence")
shapiro.test(pENV)
Model1 <- lm(AIR_E ~ DALY+AIR_H+WATER_H)
##Lab2 Part1b:Regression
EPI_data1 <- read.csv("c:/code/CSCI4600_hw/DA_Files/EPI/EPI_data.csv")
boxplot(ENVHEALTH,DALY,AIR_H,WATER_H)
##Lab2 Part1b:Regression
EPI_data1 <- read.csv("c:/code/CSCI4600_hw/DA_Files/EPI/EPI_data.csv")
boxplot(EPI_data1$ENVHEALTH,EPI_data1$DALY,EPI_data1$AIR_H,EPI_data1$WATER_H)
lmENVH<-lm(ENVHEALTH ~ DALY + AIR_H + WATER_H)
lmENVH<-lm(ENVHEALTH ~ DALY + AIR_H + WATER_H, data = EPI_data1)
cENVH<-coef(lmENVH)
length(EPI_data1$ENVHEALTH)
DALYNEW<-c(seq(5,95,(95-5)/(231-1)))
AIR_HNEW<-c(seq(5,95,(95-5)/(231-1)))
WATER_HNEW<-c(seq(5,95,(95-5)/(231-1)))
NEW<-data.frame(DALYNEW,AIR_HNEW,WATER_HNEW)
pENV<-predict(lmENVH, NEW, interval="prediction")
boxplot(EPI_data1$ENVHEALTH,EPI_data1$DALY,EPI_data1$AIR_H,EPI_data1$WATER_H)
lmENVH<-lm(ENVHEALTH ~ DALY + AIR_H + WATER_H, data = EPI_data1)
cENVH<-coef(lmENVH)
length(EPI_data1$ENVHEALTH)
DALYNEW<-c(seq(5,95,(95-5)/(231-1)))
AIR_HNEW<-c(seq(5,95,(95-5)/(231-1)))
WATER_HNEW<-c(seq(5,95,(95-5)/(231-1)))
NEW<-data.frame(DALYNEW,AIR_HNEW,WATER_HNEW)
pENV<-predict(lmENVH, NEW, interval="prediction")
NEW<-data.frame(EPI_data1$DALYNEW,EPI_data1$AIR_HNEW,EPI_data1$WATER_HNEW)
pENV<-predict(lmENVH, NEW, interval="prediction")
lmENVH<-lm(EPI_data1$ENVHEALTH ~ EPI_data1$DALY + EPI_data1$AIR_H + EPI_data1$WATER_H)
cENVH<-coef(lmENVH)
length(EPI_data1$ENVHEALTH)
DALYNEW<-c(seq(5,95,(95-5)/(231-1)))
AIR_HNEW<-c(seq(5,95,(95-5)/(231-1)))
WATER_HNEW<-c(seq(5,95,(95-5)/(231-1)))
NEW<-data.frame(EPI_data1$DALYNEW,EPI_data1$AIR_HNEW,EPI_data1$WATER_HNEW)
pENV<-predict(lmENVH, NEW, interval="prediction")
cENV<-predict(lmENVH, NEW, interval="confidence")
Model1 <- lm(AIR_E ~ DALY+AIR_H+WATER_H)
Model1 <- lm(EPI_data1$AIR_E ~ EPI_data1$DALY+EPI_data1$AIR_H+EPI_data1$WATER_H)
cENVH<-coef(Model1)
length(EPI_data1$AIR_E)
DALYNEW<-c(seq(5,95,(95-5)/(231-1)))
AIR_HNEW<-c(seq(5,95,(95-5)/(231-1)))
WATER_HNEW<-c(seq(5,95,(95-5)/(231-1)))
NEW<-data.frame(DALYNEW,AIR_HNEW,WATER_HNEW)
pENV<-predict(Model1, NEW, interval="prediction")
cENV<-predict(Model1, NEW, interval="confidence")
shapiro.test(pENV)
##Lab2 Part1b:Regression
EPI_data1 <- read.csv("c:/code/CSCI4600_hw/DA_Files/EPI/EPI_data.csv")
boxplot(ENVHEALTH,DALY,AIR_H,WATER_H)
lmENVH<-lm(ENVHEALTH ~ DALY + AIR_H + WATER_H)
cENVH<-coef(lmENVH)
boxplot(EPI_data1$ENVHEALTH,EPI_data1$DALY,EPI_data1$AIR_H,EPI_data1$WATER_H)
lmENVH<-lm(EPI_data1$ENVHEALTH ~ EPI_data1$DALY + EPI_data1$AIR_H + EPI_data1$WATER_H)
cENVH<-coef(lmENVH)
length(EPI_data1$ENVHEALTH)
DALYNEW<-c(seq(5,95,(95-5)/(231-1)))
AIR_HNEW<-c(seq(5,95,(95-5)/(231-1)))
WATER_HNEW<-c(seq(5,95,(95-5)/(231-1)))
NEW<-data.frame(DALYNEW,AIR_HNEW,WATER_HNEW)
pENV<-predict(lmENVH, NEW, interval="prediction")
cENV<-predict(lmENVH, NEW, interval="confidence")
Model1 <- lm(AIR_E ~ DALY+AIR_H+WATER_H)
Model1 <- lm(EPI_data1$AIR_E ~ EPI_data1$DALY+EPI_data1$AIR_H+EPI_data1$WATER_H)
cENVH<-coef(Model1)
length(EPI_data1$AIR_E)
DALYNEW<-c(seq(5,95,(95-5)/(231-1)))
AIR_HNEW<-c(seq(5,95,(95-5)/(231-1)))
WATER_HNEW<-c(seq(5,95,(95-5)/(231-1)))
NEW<-data.frame(DALYNEW,AIR_HNEW,WATER_HNEW)
pENV<-predict(Model1, NEW, interval="prediction")
cENV<-predict(Model1, NEW, interval="confidence")
shapiro.test(pENV)
## Lab2 Part1c : ENVHEALTH/ ECOSYSTEM
shapiro.test(ENVHEALTH)
data <- EPI_data$ENVHEALTH
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
## Lab2 Part1c : ENVHEALTH/ ECOSYSTEM
shapiro.test(EPI_data1$ENVHEALTH)
shapiro.test(EPI_data1$ECOSYSTEM)
data <- EPI_data$ENVHEALTH
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data$DALY
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data$AIR_H
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data$WATER_H
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data1$ENVHEALTH
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data1$DALY
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data1$AIR_H
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data1$WATER_H
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
cENVH<-coef(Model1)
Model1 <- lm(EPI_data1$AIR_E ~ EPI_data1$DALY+EPI_data1$AIR_H+EPI_data1$WATER_H)
cENVH<-coef(Model1)
length(EPI_data1$AIR_E)
DALYNEW<-c(seq(5,95,(95-5)/(231-1)))
AIR_HNEW<-c(seq(5,95,(95-5)/(231-1)))
WATER_HNEW<-c(seq(5,95,(95-5)/(231-1)))
NEW<-data.frame(DALYNEW,AIR_HNEW,WATER_HNEW)
pENV<-predict(Model1, NEW, interval="prediction")
cENV<-predict(Model1, NEW, interval="confidence")
shapiro.test(pENV)
Model2 <- lm(CLIMATE ~DALY+AIR_H+WATER_H)
cENVH<-coef(Model2)
Model2 <- lm(EPI_data1$CLIMATE ~EPI_data1$DALY+EPI_data1$AIR_H+EPI_data1$WATER_H)
cENVH<-coef(Model2)
length(EPI_data1$AIR_E)
DALYNEW<-c(seq(5,95,(95-5)/(231-1)))
AIR_HNEW<-c(seq(5,95,(95-5)/(231-1)))
WATER_HNEW<-c(seq(5,95,(95-5)/(231-1)))
NEW<-data.frame(DALYNEW,AIR_HNEW,WATER_HNEW)
pENV<-predict(Model2, NEW, interval="prediction")
cENV<-predict(Model2, NEW, interval="confidence")
NEW<-data.frame(EPI_data1$DALYNEW,EPI_data1$AIR_HNEW,EPI_data1$WATER_HNEW)
pENV<-predict(Model2, NEW, interval="prediction")
cENV<-predict(Model2, NEW, interval="confidence")
shapiro.test(pENV)
## Lab2 Part1c : ENVHEALTH/ ECOSYSTEM
shapiro.test(EPI_data1$ENVHEALTH)
shapiro.test(EPI_data1$ECOSYSTEM)
data <- EPI_data$ENVHEALTH
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data$DALY
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data$AIR_H
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data$WATER_H
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data1$ENVHEALTH
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data1$DALY
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data1$AIR_H
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
data <- EPI_data1$WATER_H
data <- as.numeric(data)
tf <- is.na(data)
data <- data[!tf]
length(data)
shapiro.test(data)
